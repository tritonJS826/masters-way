definitions:
  schemas.CreateMessagePayload:
    properties:
      message:
        type: string
      roomId:
        type: string
    required:
    - message
    - roomId
    type: object
  schemas.CreateRequestToGroupRoomPayload:
    properties:
      roomId:
        type: string
      userId:
        type: string
    required:
    - roomId
    - userId
    type: object
  schemas.DeclineRequestToGroupRoomResponse:
    properties:
      roomId:
        type: string
    required:
    - roomId
    type: object
  schemas.GetRequestsToGroupRoomResponse:
    properties:
      requests:
        items:
          $ref: '#/definitions/schemas.RequestToGroupRoom'
        type: array
    required:
    - requests
    type: object
  schemas.GetRoomsResponse:
    properties:
      rooms:
        items:
          $ref: '#/definitions/schemas.RoomPreviewResponse'
        type: array
      size:
        type: integer
    required:
    - rooms
    - size
    type: object
  schemas.MessageResponse:
    properties:
      message:
        type: string
      ownerId:
        type: string
    required:
    - message
    - ownerId
    type: object
  schemas.RequestToGroupRoom:
    properties:
      roomId:
        type: string
      senderId:
        type: string
    required:
    - roomId
    - senderId
    type: object
  schemas.RoomPopulatedResponse:
    properties:
      isBlocked:
        type: boolean
      messages:
        items:
          $ref: '#/definitions/schemas.MessageResponse'
        type: array
      name:
        type: string
      roomId:
        type: string
    required:
    - isBlocked
    - messages
    - name
    - roomId
    type: object
  schemas.RoomPreviewResponse:
    properties:
      isBlocked:
        type: boolean
      name:
        type: string
      roomId:
        type: string
    required:
    - isBlocked
    - name
    - roomId
    type: object
info:
  contact: {}
paths:
  /group-rooms:
    get:
      consumes:
      - application/json
      operationId: get-group-rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetRoomsResponse'
      summary: Get group rooms preview for user
      tags:
      - group
    post:
      consumes:
      - application/json
      operationId: create-group-rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Create group rooms for user
      tags:
      - group
  /group-rooms/{groupRoomId}:
    get:
      consumes:
      - application/json
      operationId: get-group-room-by-id
      parameters:
      - description: group room Id
        in: path
        name: groupRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Get group room by id
      tags:
      - group
    patch:
      consumes:
      - application/json
      operationId: update-group-rooms
      parameters:
      - description: group room Id
        in: path
        name: groupRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Update group rooms for user
      tags:
      - group
  /group-rooms/{groupRoomId}/messages:
    post:
      consumes:
      - application/json
      operationId: create-message-in-group-room
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateMessagePayload'
      - description: group room Id
        in: path
        name: groupRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.MessageResponse'
      summary: Create message to group room
      tags:
      - group
  /group-rooms/{groupRoomId}/requests/accept:
    post:
      consumes:
      - application/json
      operationId: accept-request-to-group-room
      parameters:
      - description: groupRoom Id to accept request
        in: path
        name: groupRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Accept request to group room
      tags:
      - group
  /group-rooms/{groupRoomId}/requests/decline:
    delete:
      consumes:
      - application/json
      operationId: decline-request-to-group-room
      parameters:
      - description: groupRoom Id to delete request
        in: path
        name: groupRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.DeclineRequestToGroupRoomResponse'
      summary: Decline request to group room
      tags:
      - group
  /group-rooms/{groupRoomId}/users/{userId}:
    delete:
      consumes:
      - application/json
      operationId: delete-user-to-group
      parameters:
      - description: group room Id
        in: path
        name: groupRoomId
        required: true
        type: string
      - description: user Id to delete
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Delete user to group room
      tags:
      - group
    post:
      consumes:
      - application/json
      operationId: add-user-to-group
      parameters:
      - description: group room Id
        in: path
        name: groupRoomId
        required: true
        type: string
      - description: user Id to delete
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoomPopulatedResponse'
      summary: Add user to group room
      tags:
      - group
  /group-rooms/requests:
    get:
      consumes:
      - application/json
      operationId: get-requests-to-group-room
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetRequestsToGroupRoomResponse'
      summary: Get requests to group room
      tags:
      - group
    post:
      consumes:
      - application/json
      operationId: create-requests-to-group-room
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateRequestToGroupRoomPayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Create requests to group room
      tags:
      - group
  /p2p-rooms:
    get:
      consumes:
      - application/json
      operationId: get-p2p-rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetRoomsResponse'
      summary: Get p2p rooms for user
      tags:
      - p2p
    post:
      consumes:
      - application/json
      operationId: create-p2p-room
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.MessageResponse'
      summary: Create p2p room for user
      tags:
      - p2p
  /p2p-rooms/{p2pRoomId}:
    get:
      consumes:
      - application/json
      operationId: get-p2p-room-by-id
      parameters:
      - description: p2p room Id
        in: path
        name: p2pRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.MessageResponse'
      summary: Get p2p room by id
      tags:
      - p2p
    patch:
      consumes:
      - application/json
      operationId: update-p2p-room
      parameters:
      - description: p2p room Id
        in: path
        name: p2pRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.MessageResponse'
      summary: Update p2p room for user
      tags:
      - p2p
  /p2p-rooms/{p2pRoomId}/messages:
    post:
      consumes:
      - application/json
      operationId: make-message-in-p2p-room
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateMessagePayload'
      - description: p2p room Id
        in: path
        name: p2pRoomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.MessageResponse'
      summary: Create message in p2p room
      tags:
      - p2p
swagger: "2.0"
