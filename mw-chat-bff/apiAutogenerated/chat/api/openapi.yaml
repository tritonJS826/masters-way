openapi: 3.0.1
info:
  contact: {}
  description: ""
  title: ""
  version: ""
servers:
- url: /
paths:
  /group-rooms/{roomId}/users/{userId}:
    delete:
      operationId: delete-user-to-group
      parameters:
      - description: room Id
        in: path
        name: roomId
        required: true
        schema:
          type: string
      - description: user Id to delete
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.RoomPopulatedResponse'
          description: OK
      summary: Delete user from room
      tags:
      - room
  /rooms:
    post:
      operationId: create-room
      parameters:
      - description: "room type: private, group"
        in: path
        name: roomType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.RoomPopulatedResponse'
          description: OK
      summary: Create room for user
      tags:
      - room
  /rooms/add-user/{roomId}/users/{userId}:
    post:
      operationId: add-user-to-room
      parameters:
      - description: room Id
        in: path
        name: roomId
        required: true
        schema:
          type: string
      - description: user Id to delete
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.RoomPopulatedResponse'
          description: OK
      summary: Add user to room
      tags:
      - room
  /rooms/create-message{roomId}/messages:
    post:
      operationId: make-message-in-room
      parameters:
      - description: room Id
        in: path
        name: roomId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas.CreateMessagePayload'
        description: query params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.MessageResponse'
          description: OK
      summary: Create message in room
      tags:
      - room
      x-codegen-request-body-name: request
  /rooms/list/{roomType}:
    get:
      operationId: get-rooms
      parameters:
      - description: "room type: private | group"
        in: path
        name: roomType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.GetRoomsResponse'
          description: OK
      summary: Get rooms for user
      tags:
      - room
  /rooms/preview:
    get:
      operationId: get-chat preview
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.GetChatPreviewResponse'
          description: OK
      summary: Get chat preview
      tags:
      - room
  /rooms/{roomId}:
    get:
      operationId: get-room-by-id
      parameters:
      - description: room Id
        in: path
        name: roomId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.RoomPopulatedResponse'
          description: OK
      summary: Get room by id
      tags:
      - room
    patch:
      operationId: update-room
      parameters:
      - description: room Id
        in: path
        name: roomId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas.RoomPopulatedResponse'
          description: OK
      summary: Update room for user
      tags:
      - room
components:
  schemas:
    schemas.CreateMessagePayload:
      properties:
        message:
          type: string
        roomId:
          type: string
      required:
      - message
      - roomId
      type: object
    schemas.GetChatPreviewResponse:
      example:
        userId: 0
      properties:
        userId:
          type: integer
      required:
      - userId
      type: object
    schemas.GetRoomsResponse:
      example:
        rooms:
        - isBlocked: true
          name: name
          roomId: roomId
          users:
          - role: role
            userId: userId
          - role: role
            userId: userId
        - isBlocked: true
          name: name
          roomId: roomId
          users:
          - role: role
            userId: userId
          - role: role
            userId: userId
        size: 0
      properties:
        rooms:
          items:
            $ref: '#/components/schemas/schemas.RoomPreviewResponse'
          type: array
        size:
          type: integer
      required:
      - rooms
      - size
      type: object
    schemas.MessageReaders:
      example:
        readDate: readDate
        userId: userId
      properties:
        readDate:
          type: string
        userId:
          type: string
      required:
      - readDate
      - userId
      type: object
    schemas.MessageResponse:
      example:
        messageReaders:
        - readDate: readDate
          userId: userId
        - readDate: readDate
          userId: userId
        message: message
        ownerId: ownerId
      properties:
        message:
          type: string
        messageReaders:
          items:
            $ref: '#/components/schemas/schemas.MessageReaders'
          type: array
        ownerId:
          type: string
      required:
      - message
      - messageReaders
      - ownerId
      type: object
    schemas.RoomPopulatedResponse:
      example:
        isBlocked: true
        name: name
        messages:
        - messageReaders:
          - readDate: readDate
            userId: userId
          - readDate: readDate
            userId: userId
          message: message
          ownerId: ownerId
        - messageReaders:
          - readDate: readDate
            userId: userId
          - readDate: readDate
            userId: userId
          message: message
          ownerId: ownerId
        roomId: roomId
        users:
        - role: role
          userId: userId
        - role: role
          userId: userId
      properties:
        isBlocked:
          type: boolean
        messages:
          items:
            $ref: '#/components/schemas/schemas.MessageResponse'
          type: array
        name:
          type: string
        roomId:
          type: string
        users:
          items:
            $ref: '#/components/schemas/schemas.UserResponse'
          type: array
      required:
      - isBlocked
      - messages
      - name
      - roomId
      - users
      type: object
    schemas.RoomPreviewResponse:
      example:
        isBlocked: true
        name: name
        roomId: roomId
        users:
        - role: role
          userId: userId
        - role: role
          userId: userId
      properties:
        isBlocked:
          type: boolean
        name:
          nullable: true
          type: string
        roomId:
          type: string
        users:
          items:
            $ref: '#/components/schemas/schemas.UserResponse'
          type: array
      required:
      - isBlocked
      - name
      - roomId
      - users
      type: object
    schemas.UserResponse:
      example:
        role: role
        userId: userId
      properties:
        role:
          type: string
        userId:
          type: string
      required:
      - role
      - userId
      type: object
x-original-swagger-version: "2.0"
