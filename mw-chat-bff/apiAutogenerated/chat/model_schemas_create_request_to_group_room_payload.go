/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasCreateRequestToGroupRoomPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasCreateRequestToGroupRoomPayload{}

// SchemasCreateRequestToGroupRoomPayload struct for SchemasCreateRequestToGroupRoomPayload
type SchemasCreateRequestToGroupRoomPayload struct {
	RoomId string `json:"roomId"`
	UserId string `json:"userId"`
}

type _SchemasCreateRequestToGroupRoomPayload SchemasCreateRequestToGroupRoomPayload

// NewSchemasCreateRequestToGroupRoomPayload instantiates a new SchemasCreateRequestToGroupRoomPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasCreateRequestToGroupRoomPayload(roomId string, userId string) *SchemasCreateRequestToGroupRoomPayload {
	this := SchemasCreateRequestToGroupRoomPayload{}
	this.RoomId = roomId
	this.UserId = userId
	return &this
}

// NewSchemasCreateRequestToGroupRoomPayloadWithDefaults instantiates a new SchemasCreateRequestToGroupRoomPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasCreateRequestToGroupRoomPayloadWithDefaults() *SchemasCreateRequestToGroupRoomPayload {
	this := SchemasCreateRequestToGroupRoomPayload{}
	return &this
}

// GetRoomId returns the RoomId field value
func (o *SchemasCreateRequestToGroupRoomPayload) GetRoomId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateRequestToGroupRoomPayload) GetRoomIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomId, true
}

// SetRoomId sets field value
func (o *SchemasCreateRequestToGroupRoomPayload) SetRoomId(v string) {
	o.RoomId = v
}

// GetUserId returns the UserId field value
func (o *SchemasCreateRequestToGroupRoomPayload) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateRequestToGroupRoomPayload) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SchemasCreateRequestToGroupRoomPayload) SetUserId(v string) {
	o.UserId = v
}

func (o SchemasCreateRequestToGroupRoomPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasCreateRequestToGroupRoomPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roomId"] = o.RoomId
	toSerialize["userId"] = o.UserId
	return toSerialize, nil
}

func (o *SchemasCreateRequestToGroupRoomPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"roomId",
		"userId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasCreateRequestToGroupRoomPayload := _SchemasCreateRequestToGroupRoomPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasCreateRequestToGroupRoomPayload)

	if err != nil {
		return err
	}

	*o = SchemasCreateRequestToGroupRoomPayload(varSchemasCreateRequestToGroupRoomPayload)

	return err
}

type NullableSchemasCreateRequestToGroupRoomPayload struct {
	value *SchemasCreateRequestToGroupRoomPayload
	isSet bool
}

func (v NullableSchemasCreateRequestToGroupRoomPayload) Get() *SchemasCreateRequestToGroupRoomPayload {
	return v.value
}

func (v *NullableSchemasCreateRequestToGroupRoomPayload) Set(val *SchemasCreateRequestToGroupRoomPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasCreateRequestToGroupRoomPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasCreateRequestToGroupRoomPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasCreateRequestToGroupRoomPayload(val *SchemasCreateRequestToGroupRoomPayload) *NullableSchemasCreateRequestToGroupRoomPayload {
	return &NullableSchemasCreateRequestToGroupRoomPayload{value: val, isSet: true}
}

func (v NullableSchemasCreateRequestToGroupRoomPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasCreateRequestToGroupRoomPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


