/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasRequestToGroupRoom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasRequestToGroupRoom{}

// SchemasRequestToGroupRoom struct for SchemasRequestToGroupRoom
type SchemasRequestToGroupRoom struct {
	RoomId string `json:"roomId"`
	SenderId string `json:"senderId"`
}

type _SchemasRequestToGroupRoom SchemasRequestToGroupRoom

// NewSchemasRequestToGroupRoom instantiates a new SchemasRequestToGroupRoom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasRequestToGroupRoom(roomId string, senderId string) *SchemasRequestToGroupRoom {
	this := SchemasRequestToGroupRoom{}
	this.RoomId = roomId
	this.SenderId = senderId
	return &this
}

// NewSchemasRequestToGroupRoomWithDefaults instantiates a new SchemasRequestToGroupRoom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasRequestToGroupRoomWithDefaults() *SchemasRequestToGroupRoom {
	this := SchemasRequestToGroupRoom{}
	return &this
}

// GetRoomId returns the RoomId field value
func (o *SchemasRequestToGroupRoom) GetRoomId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value
// and a boolean to check if the value has been set.
func (o *SchemasRequestToGroupRoom) GetRoomIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomId, true
}

// SetRoomId sets field value
func (o *SchemasRequestToGroupRoom) SetRoomId(v string) {
	o.RoomId = v
}

// GetSenderId returns the SenderId field value
func (o *SchemasRequestToGroupRoom) GetSenderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value
// and a boolean to check if the value has been set.
func (o *SchemasRequestToGroupRoom) GetSenderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderId, true
}

// SetSenderId sets field value
func (o *SchemasRequestToGroupRoom) SetSenderId(v string) {
	o.SenderId = v
}

func (o SchemasRequestToGroupRoom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasRequestToGroupRoom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roomId"] = o.RoomId
	toSerialize["senderId"] = o.SenderId
	return toSerialize, nil
}

func (o *SchemasRequestToGroupRoom) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"roomId",
		"senderId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasRequestToGroupRoom := _SchemasRequestToGroupRoom{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasRequestToGroupRoom)

	if err != nil {
		return err
	}

	*o = SchemasRequestToGroupRoom(varSchemasRequestToGroupRoom)

	return err
}

type NullableSchemasRequestToGroupRoom struct {
	value *SchemasRequestToGroupRoom
	isSet bool
}

func (v NullableSchemasRequestToGroupRoom) Get() *SchemasRequestToGroupRoom {
	return v.value
}

func (v *NullableSchemasRequestToGroupRoom) Set(val *SchemasRequestToGroupRoom) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasRequestToGroupRoom) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasRequestToGroupRoom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasRequestToGroupRoom(val *SchemasRequestToGroupRoom) *NullableSchemasRequestToGroupRoom {
	return &NullableSchemasRequestToGroupRoom{value: val, isSet: true}
}

func (v NullableSchemasRequestToGroupRoom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasRequestToGroupRoom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


