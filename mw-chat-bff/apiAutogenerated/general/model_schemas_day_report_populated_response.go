/*
Masters way API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasDayReportPopulatedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasDayReportPopulatedResponse{}

// SchemasDayReportPopulatedResponse struct for SchemasDayReportPopulatedResponse
type SchemasDayReportPopulatedResponse struct {
	Comments []SchemasCommentPopulatedResponse `json:"comments"`
	CreatedAt string `json:"createdAt"`
	IsDayOff bool `json:"isDayOff"`
	JobsDone []SchemasJobDonePopulatedResponse `json:"jobsDone"`
	Plans []SchemasPlanPopulatedResponse `json:"plans"`
	Problems []SchemasProblemPopulatedResponse `json:"problems"`
	UpdatedAt string `json:"updatedAt"`
	Uuid string `json:"uuid"`
}

type _SchemasDayReportPopulatedResponse SchemasDayReportPopulatedResponse

// NewSchemasDayReportPopulatedResponse instantiates a new SchemasDayReportPopulatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasDayReportPopulatedResponse(comments []SchemasCommentPopulatedResponse, createdAt string, isDayOff bool, jobsDone []SchemasJobDonePopulatedResponse, plans []SchemasPlanPopulatedResponse, problems []SchemasProblemPopulatedResponse, updatedAt string, uuid string) *SchemasDayReportPopulatedResponse {
	this := SchemasDayReportPopulatedResponse{}
	this.Comments = comments
	this.CreatedAt = createdAt
	this.IsDayOff = isDayOff
	this.JobsDone = jobsDone
	this.Plans = plans
	this.Problems = problems
	this.UpdatedAt = updatedAt
	this.Uuid = uuid
	return &this
}

// NewSchemasDayReportPopulatedResponseWithDefaults instantiates a new SchemasDayReportPopulatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasDayReportPopulatedResponseWithDefaults() *SchemasDayReportPopulatedResponse {
	this := SchemasDayReportPopulatedResponse{}
	return &this
}

// GetComments returns the Comments field value
func (o *SchemasDayReportPopulatedResponse) GetComments() []SchemasCommentPopulatedResponse {
	if o == nil {
		var ret []SchemasCommentPopulatedResponse
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetCommentsOk() ([]SchemasCommentPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *SchemasDayReportPopulatedResponse) SetComments(v []SchemasCommentPopulatedResponse) {
	o.Comments = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SchemasDayReportPopulatedResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SchemasDayReportPopulatedResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetIsDayOff returns the IsDayOff field value
func (o *SchemasDayReportPopulatedResponse) GetIsDayOff() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDayOff
}

// GetIsDayOffOk returns a tuple with the IsDayOff field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetIsDayOffOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDayOff, true
}

// SetIsDayOff sets field value
func (o *SchemasDayReportPopulatedResponse) SetIsDayOff(v bool) {
	o.IsDayOff = v
}

// GetJobsDone returns the JobsDone field value
func (o *SchemasDayReportPopulatedResponse) GetJobsDone() []SchemasJobDonePopulatedResponse {
	if o == nil {
		var ret []SchemasJobDonePopulatedResponse
		return ret
	}

	return o.JobsDone
}

// GetJobsDoneOk returns a tuple with the JobsDone field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetJobsDoneOk() ([]SchemasJobDonePopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobsDone, true
}

// SetJobsDone sets field value
func (o *SchemasDayReportPopulatedResponse) SetJobsDone(v []SchemasJobDonePopulatedResponse) {
	o.JobsDone = v
}

// GetPlans returns the Plans field value
func (o *SchemasDayReportPopulatedResponse) GetPlans() []SchemasPlanPopulatedResponse {
	if o == nil {
		var ret []SchemasPlanPopulatedResponse
		return ret
	}

	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetPlansOk() ([]SchemasPlanPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plans, true
}

// SetPlans sets field value
func (o *SchemasDayReportPopulatedResponse) SetPlans(v []SchemasPlanPopulatedResponse) {
	o.Plans = v
}

// GetProblems returns the Problems field value
func (o *SchemasDayReportPopulatedResponse) GetProblems() []SchemasProblemPopulatedResponse {
	if o == nil {
		var ret []SchemasProblemPopulatedResponse
		return ret
	}

	return o.Problems
}

// GetProblemsOk returns a tuple with the Problems field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetProblemsOk() ([]SchemasProblemPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Problems, true
}

// SetProblems sets field value
func (o *SchemasDayReportPopulatedResponse) SetProblems(v []SchemasProblemPopulatedResponse) {
	o.Problems = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SchemasDayReportPopulatedResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SchemasDayReportPopulatedResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetUuid returns the Uuid field value
func (o *SchemasDayReportPopulatedResponse) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SchemasDayReportPopulatedResponse) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SchemasDayReportPopulatedResponse) SetUuid(v string) {
	o.Uuid = v
}

func (o SchemasDayReportPopulatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasDayReportPopulatedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["comments"] = o.Comments
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["isDayOff"] = o.IsDayOff
	toSerialize["jobsDone"] = o.JobsDone
	toSerialize["plans"] = o.Plans
	toSerialize["problems"] = o.Problems
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SchemasDayReportPopulatedResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"comments",
		"createdAt",
		"isDayOff",
		"jobsDone",
		"plans",
		"problems",
		"updatedAt",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasDayReportPopulatedResponse := _SchemasDayReportPopulatedResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasDayReportPopulatedResponse)

	if err != nil {
		return err
	}

	*o = SchemasDayReportPopulatedResponse(varSchemasDayReportPopulatedResponse)

	return err
}

type NullableSchemasDayReportPopulatedResponse struct {
	value *SchemasDayReportPopulatedResponse
	isSet bool
}

func (v NullableSchemasDayReportPopulatedResponse) Get() *SchemasDayReportPopulatedResponse {
	return v.value
}

func (v *NullableSchemasDayReportPopulatedResponse) Set(val *SchemasDayReportPopulatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasDayReportPopulatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasDayReportPopulatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasDayReportPopulatedResponse(val *SchemasDayReportPopulatedResponse) *NullableSchemasDayReportPopulatedResponse {
	return &NullableSchemasDayReportPopulatedResponse{value: val, isSet: true}
}

func (v NullableSchemasDayReportPopulatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasDayReportPopulatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


