/*
Masters way API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasMetricResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasMetricResponse{}

// SchemasMetricResponse struct for SchemasMetricResponse
type SchemasMetricResponse struct {
	Description string `json:"description"`
	DoneDate NullableString `json:"doneDate"`
	EstimationTime int32 `json:"estimationTime"`
	IsDone bool `json:"isDone"`
	Uuid string `json:"uuid"`
}

type _SchemasMetricResponse SchemasMetricResponse

// NewSchemasMetricResponse instantiates a new SchemasMetricResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasMetricResponse(description string, doneDate NullableString, estimationTime int32, isDone bool, uuid string) *SchemasMetricResponse {
	this := SchemasMetricResponse{}
	this.Description = description
	this.DoneDate = doneDate
	this.EstimationTime = estimationTime
	this.IsDone = isDone
	this.Uuid = uuid
	return &this
}

// NewSchemasMetricResponseWithDefaults instantiates a new SchemasMetricResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasMetricResponseWithDefaults() *SchemasMetricResponse {
	this := SchemasMetricResponse{}
	return &this
}

// GetDescription returns the Description field value
func (o *SchemasMetricResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SchemasMetricResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SchemasMetricResponse) SetDescription(v string) {
	o.Description = v
}

// GetDoneDate returns the DoneDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SchemasMetricResponse) GetDoneDate() string {
	if o == nil || o.DoneDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.DoneDate.Get()
}

// GetDoneDateOk returns a tuple with the DoneDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchemasMetricResponse) GetDoneDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoneDate.Get(), o.DoneDate.IsSet()
}

// SetDoneDate sets field value
func (o *SchemasMetricResponse) SetDoneDate(v string) {
	o.DoneDate.Set(&v)
}

// GetEstimationTime returns the EstimationTime field value
func (o *SchemasMetricResponse) GetEstimationTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EstimationTime
}

// GetEstimationTimeOk returns a tuple with the EstimationTime field value
// and a boolean to check if the value has been set.
func (o *SchemasMetricResponse) GetEstimationTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EstimationTime, true
}

// SetEstimationTime sets field value
func (o *SchemasMetricResponse) SetEstimationTime(v int32) {
	o.EstimationTime = v
}

// GetIsDone returns the IsDone field value
func (o *SchemasMetricResponse) GetIsDone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value
// and a boolean to check if the value has been set.
func (o *SchemasMetricResponse) GetIsDoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDone, true
}

// SetIsDone sets field value
func (o *SchemasMetricResponse) SetIsDone(v bool) {
	o.IsDone = v
}

// GetUuid returns the Uuid field value
func (o *SchemasMetricResponse) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SchemasMetricResponse) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SchemasMetricResponse) SetUuid(v string) {
	o.Uuid = v
}

func (o SchemasMetricResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasMetricResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["doneDate"] = o.DoneDate.Get()
	toSerialize["estimationTime"] = o.EstimationTime
	toSerialize["isDone"] = o.IsDone
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SchemasMetricResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"doneDate",
		"estimationTime",
		"isDone",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasMetricResponse := _SchemasMetricResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasMetricResponse)

	if err != nil {
		return err
	}

	*o = SchemasMetricResponse(varSchemasMetricResponse)

	return err
}

type NullableSchemasMetricResponse struct {
	value *SchemasMetricResponse
	isSet bool
}

func (v NullableSchemasMetricResponse) Get() *SchemasMetricResponse {
	return v.value
}

func (v *NullableSchemasMetricResponse) Set(val *SchemasMetricResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasMetricResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasMetricResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasMetricResponse(val *SchemasMetricResponse) *NullableSchemasMetricResponse {
	return &NullableSchemasMetricResponse{value: val, isSet: true}
}

func (v NullableSchemasMetricResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasMetricResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


