/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasUserPlainResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasUserPlainResponse{}

// SchemasUserPlainResponse struct for SchemasUserPlainResponse
type SchemasUserPlainResponse struct {
	CreatedAt string `json:"createdAt"`
	Description string `json:"description"`
	Email string `json:"email"`
	ImageUrl string `json:"imageUrl"`
	IsMentor bool `json:"isMentor"`
	Name string `json:"name"`
	Uuid string `json:"uuid"`
}

type _SchemasUserPlainResponse SchemasUserPlainResponse

// NewSchemasUserPlainResponse instantiates a new SchemasUserPlainResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasUserPlainResponse(createdAt string, description string, email string, imageUrl string, isMentor bool, name string, uuid string) *SchemasUserPlainResponse {
	this := SchemasUserPlainResponse{}
	this.CreatedAt = createdAt
	this.Description = description
	this.Email = email
	this.ImageUrl = imageUrl
	this.IsMentor = isMentor
	this.Name = name
	this.Uuid = uuid
	return &this
}

// NewSchemasUserPlainResponseWithDefaults instantiates a new SchemasUserPlainResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasUserPlainResponseWithDefaults() *SchemasUserPlainResponse {
	this := SchemasUserPlainResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *SchemasUserPlainResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SchemasUserPlainResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *SchemasUserPlainResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SchemasUserPlainResponse) SetDescription(v string) {
	o.Description = v
}

// GetEmail returns the Email field value
func (o *SchemasUserPlainResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SchemasUserPlainResponse) SetEmail(v string) {
	o.Email = v
}

// GetImageUrl returns the ImageUrl field value
func (o *SchemasUserPlainResponse) GetImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *SchemasUserPlainResponse) SetImageUrl(v string) {
	o.ImageUrl = v
}

// GetIsMentor returns the IsMentor field value
func (o *SchemasUserPlainResponse) GetIsMentor() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMentor
}

// GetIsMentorOk returns a tuple with the IsMentor field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetIsMentorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMentor, true
}

// SetIsMentor sets field value
func (o *SchemasUserPlainResponse) SetIsMentor(v bool) {
	o.IsMentor = v
}

// GetName returns the Name field value
func (o *SchemasUserPlainResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SchemasUserPlainResponse) SetName(v string) {
	o.Name = v
}

// GetUuid returns the Uuid field value
func (o *SchemasUserPlainResponse) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SchemasUserPlainResponse) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SchemasUserPlainResponse) SetUuid(v string) {
	o.Uuid = v
}

func (o SchemasUserPlainResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasUserPlainResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["description"] = o.Description
	toSerialize["email"] = o.Email
	toSerialize["imageUrl"] = o.ImageUrl
	toSerialize["isMentor"] = o.IsMentor
	toSerialize["name"] = o.Name
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SchemasUserPlainResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"description",
		"email",
		"imageUrl",
		"isMentor",
		"name",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasUserPlainResponse := _SchemasUserPlainResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasUserPlainResponse)

	if err != nil {
		return err
	}

	*o = SchemasUserPlainResponse(varSchemasUserPlainResponse)

	return err
}

type NullableSchemasUserPlainResponse struct {
	value *SchemasUserPlainResponse
	isSet bool
}

func (v NullableSchemasUserPlainResponse) Get() *SchemasUserPlainResponse {
	return v.value
}

func (v *NullableSchemasUserPlainResponse) Set(val *SchemasUserPlainResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasUserPlainResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasUserPlainResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasUserPlainResponse(val *SchemasUserPlainResponse) *NullableSchemasUserPlainResponse {
	return &NullableSchemasUserPlainResponse{value: val, isSet: true}
}

func (v NullableSchemasUserPlainResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasUserPlainResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


