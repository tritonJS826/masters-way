/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasCommentPopulatedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasCommentPopulatedResponse{}

// SchemasCommentPopulatedResponse struct for SchemasCommentPopulatedResponse
type SchemasCommentPopulatedResponse struct {
	CreatedAt string `json:"createdAt"`
	DayReportUuid string `json:"dayReportUuid"`
	Description string `json:"description"`
	OwnerName string `json:"ownerName"`
	OwnerUuid string `json:"ownerUuid"`
	UpdatedAt string `json:"updatedAt"`
	Uuid string `json:"uuid"`
}

type _SchemasCommentPopulatedResponse SchemasCommentPopulatedResponse

// NewSchemasCommentPopulatedResponse instantiates a new SchemasCommentPopulatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasCommentPopulatedResponse(createdAt string, dayReportUuid string, description string, ownerName string, ownerUuid string, updatedAt string, uuid string) *SchemasCommentPopulatedResponse {
	this := SchemasCommentPopulatedResponse{}
	this.CreatedAt = createdAt
	this.DayReportUuid = dayReportUuid
	this.Description = description
	this.OwnerName = ownerName
	this.OwnerUuid = ownerUuid
	this.UpdatedAt = updatedAt
	this.Uuid = uuid
	return &this
}

// NewSchemasCommentPopulatedResponseWithDefaults instantiates a new SchemasCommentPopulatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasCommentPopulatedResponseWithDefaults() *SchemasCommentPopulatedResponse {
	this := SchemasCommentPopulatedResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *SchemasCommentPopulatedResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SchemasCommentPopulatedResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDayReportUuid returns the DayReportUuid field value
func (o *SchemasCommentPopulatedResponse) GetDayReportUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DayReportUuid
}

// GetDayReportUuidOk returns a tuple with the DayReportUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetDayReportUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DayReportUuid, true
}

// SetDayReportUuid sets field value
func (o *SchemasCommentPopulatedResponse) SetDayReportUuid(v string) {
	o.DayReportUuid = v
}

// GetDescription returns the Description field value
func (o *SchemasCommentPopulatedResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SchemasCommentPopulatedResponse) SetDescription(v string) {
	o.Description = v
}

// GetOwnerName returns the OwnerName field value
func (o *SchemasCommentPopulatedResponse) GetOwnerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerName, true
}

// SetOwnerName sets field value
func (o *SchemasCommentPopulatedResponse) SetOwnerName(v string) {
	o.OwnerName = v
}

// GetOwnerUuid returns the OwnerUuid field value
func (o *SchemasCommentPopulatedResponse) GetOwnerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerUuid
}

// GetOwnerUuidOk returns a tuple with the OwnerUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetOwnerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerUuid, true
}

// SetOwnerUuid sets field value
func (o *SchemasCommentPopulatedResponse) SetOwnerUuid(v string) {
	o.OwnerUuid = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SchemasCommentPopulatedResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SchemasCommentPopulatedResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetUuid returns the Uuid field value
func (o *SchemasCommentPopulatedResponse) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCommentPopulatedResponse) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SchemasCommentPopulatedResponse) SetUuid(v string) {
	o.Uuid = v
}

func (o SchemasCommentPopulatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasCommentPopulatedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["dayReportUuid"] = o.DayReportUuid
	toSerialize["description"] = o.Description
	toSerialize["ownerName"] = o.OwnerName
	toSerialize["ownerUuid"] = o.OwnerUuid
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SchemasCommentPopulatedResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"dayReportUuid",
		"description",
		"ownerName",
		"ownerUuid",
		"updatedAt",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasCommentPopulatedResponse := _SchemasCommentPopulatedResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasCommentPopulatedResponse)

	if err != nil {
		return err
	}

	*o = SchemasCommentPopulatedResponse(varSchemasCommentPopulatedResponse)

	return err
}

type NullableSchemasCommentPopulatedResponse struct {
	value *SchemasCommentPopulatedResponse
	isSet bool
}

func (v NullableSchemasCommentPopulatedResponse) Get() *SchemasCommentPopulatedResponse {
	return v.value
}

func (v *NullableSchemasCommentPopulatedResponse) Set(val *SchemasCommentPopulatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasCommentPopulatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasCommentPopulatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasCommentPopulatedResponse(val *SchemasCommentPopulatedResponse) *NullableSchemasCommentPopulatedResponse {
	return &NullableSchemasCommentPopulatedResponse{value: val, isSet: true}
}

func (v NullableSchemasCommentPopulatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasCommentPopulatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


