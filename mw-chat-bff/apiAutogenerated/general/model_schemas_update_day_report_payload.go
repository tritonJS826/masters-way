/*
Masters way API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SchemasUpdateDayReportPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasUpdateDayReportPayload{}

// SchemasUpdateDayReportPayload struct for SchemasUpdateDayReportPayload
type SchemasUpdateDayReportPayload struct {
	IsDayOff *bool `json:"isDayOff,omitempty"`
}

// NewSchemasUpdateDayReportPayload instantiates a new SchemasUpdateDayReportPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasUpdateDayReportPayload() *SchemasUpdateDayReportPayload {
	this := SchemasUpdateDayReportPayload{}
	return &this
}

// NewSchemasUpdateDayReportPayloadWithDefaults instantiates a new SchemasUpdateDayReportPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasUpdateDayReportPayloadWithDefaults() *SchemasUpdateDayReportPayload {
	this := SchemasUpdateDayReportPayload{}
	return &this
}

// GetIsDayOff returns the IsDayOff field value if set, zero value otherwise.
func (o *SchemasUpdateDayReportPayload) GetIsDayOff() bool {
	if o == nil || IsNil(o.IsDayOff) {
		var ret bool
		return ret
	}
	return *o.IsDayOff
}

// GetIsDayOffOk returns a tuple with the IsDayOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemasUpdateDayReportPayload) GetIsDayOffOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDayOff) {
		return nil, false
	}
	return o.IsDayOff, true
}

// HasIsDayOff returns a boolean if a field has been set.
func (o *SchemasUpdateDayReportPayload) HasIsDayOff() bool {
	if o != nil && !IsNil(o.IsDayOff) {
		return true
	}

	return false
}

// SetIsDayOff gets a reference to the given bool and assigns it to the IsDayOff field.
func (o *SchemasUpdateDayReportPayload) SetIsDayOff(v bool) {
	o.IsDayOff = &v
}

func (o SchemasUpdateDayReportPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasUpdateDayReportPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDayOff) {
		toSerialize["isDayOff"] = o.IsDayOff
	}
	return toSerialize, nil
}

type NullableSchemasUpdateDayReportPayload struct {
	value *SchemasUpdateDayReportPayload
	isSet bool
}

func (v NullableSchemasUpdateDayReportPayload) Get() *SchemasUpdateDayReportPayload {
	return v.value
}

func (v *NullableSchemasUpdateDayReportPayload) Set(val *SchemasUpdateDayReportPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasUpdateDayReportPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasUpdateDayReportPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasUpdateDayReportPayload(val *SchemasUpdateDayReportPayload) *NullableSchemasUpdateDayReportPayload {
	return &NullableSchemasUpdateDayReportPayload{value: val, isSet: true}
}

func (v NullableSchemasUpdateDayReportPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasUpdateDayReportPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


