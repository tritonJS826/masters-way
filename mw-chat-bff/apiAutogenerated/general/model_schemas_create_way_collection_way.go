/*
Masters way API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasCreateWayCollectionWay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasCreateWayCollectionWay{}

// SchemasCreateWayCollectionWay struct for SchemasCreateWayCollectionWay
type SchemasCreateWayCollectionWay struct {
	WayCollectionUuid string `json:"wayCollectionUuid"`
	WayUuid string `json:"wayUuid"`
}

type _SchemasCreateWayCollectionWay SchemasCreateWayCollectionWay

// NewSchemasCreateWayCollectionWay instantiates a new SchemasCreateWayCollectionWay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasCreateWayCollectionWay(wayCollectionUuid string, wayUuid string) *SchemasCreateWayCollectionWay {
	this := SchemasCreateWayCollectionWay{}
	this.WayCollectionUuid = wayCollectionUuid
	this.WayUuid = wayUuid
	return &this
}

// NewSchemasCreateWayCollectionWayWithDefaults instantiates a new SchemasCreateWayCollectionWay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasCreateWayCollectionWayWithDefaults() *SchemasCreateWayCollectionWay {
	this := SchemasCreateWayCollectionWay{}
	return &this
}

// GetWayCollectionUuid returns the WayCollectionUuid field value
func (o *SchemasCreateWayCollectionWay) GetWayCollectionUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WayCollectionUuid
}

// GetWayCollectionUuidOk returns a tuple with the WayCollectionUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateWayCollectionWay) GetWayCollectionUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WayCollectionUuid, true
}

// SetWayCollectionUuid sets field value
func (o *SchemasCreateWayCollectionWay) SetWayCollectionUuid(v string) {
	o.WayCollectionUuid = v
}

// GetWayUuid returns the WayUuid field value
func (o *SchemasCreateWayCollectionWay) GetWayUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WayUuid
}

// GetWayUuidOk returns a tuple with the WayUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateWayCollectionWay) GetWayUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WayUuid, true
}

// SetWayUuid sets field value
func (o *SchemasCreateWayCollectionWay) SetWayUuid(v string) {
	o.WayUuid = v
}

func (o SchemasCreateWayCollectionWay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasCreateWayCollectionWay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["wayCollectionUuid"] = o.WayCollectionUuid
	toSerialize["wayUuid"] = o.WayUuid
	return toSerialize, nil
}

func (o *SchemasCreateWayCollectionWay) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"wayCollectionUuid",
		"wayUuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasCreateWayCollectionWay := _SchemasCreateWayCollectionWay{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasCreateWayCollectionWay)

	if err != nil {
		return err
	}

	*o = SchemasCreateWayCollectionWay(varSchemasCreateWayCollectionWay)

	return err
}

type NullableSchemasCreateWayCollectionWay struct {
	value *SchemasCreateWayCollectionWay
	isSet bool
}

func (v NullableSchemasCreateWayCollectionWay) Get() *SchemasCreateWayCollectionWay {
	return v.value
}

func (v *NullableSchemasCreateWayCollectionWay) Set(val *SchemasCreateWayCollectionWay) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasCreateWayCollectionWay) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasCreateWayCollectionWay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasCreateWayCollectionWay(val *SchemasCreateWayCollectionWay) *NullableSchemasCreateWayCollectionWay {
	return &NullableSchemasCreateWayCollectionWay{value: val, isSet: true}
}

func (v NullableSchemasCreateWayCollectionWay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasCreateWayCollectionWay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


