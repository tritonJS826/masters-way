/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasCreateFavoriteUserPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasCreateFavoriteUserPayload{}

// SchemasCreateFavoriteUserPayload struct for SchemasCreateFavoriteUserPayload
type SchemasCreateFavoriteUserPayload struct {
	AcceptorUserUuid string `json:"acceptorUserUuid"`
	DonorUserUuid string `json:"donorUserUuid"`
}

type _SchemasCreateFavoriteUserPayload SchemasCreateFavoriteUserPayload

// NewSchemasCreateFavoriteUserPayload instantiates a new SchemasCreateFavoriteUserPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasCreateFavoriteUserPayload(acceptorUserUuid string, donorUserUuid string) *SchemasCreateFavoriteUserPayload {
	this := SchemasCreateFavoriteUserPayload{}
	this.AcceptorUserUuid = acceptorUserUuid
	this.DonorUserUuid = donorUserUuid
	return &this
}

// NewSchemasCreateFavoriteUserPayloadWithDefaults instantiates a new SchemasCreateFavoriteUserPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasCreateFavoriteUserPayloadWithDefaults() *SchemasCreateFavoriteUserPayload {
	this := SchemasCreateFavoriteUserPayload{}
	return &this
}

// GetAcceptorUserUuid returns the AcceptorUserUuid field value
func (o *SchemasCreateFavoriteUserPayload) GetAcceptorUserUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AcceptorUserUuid
}

// GetAcceptorUserUuidOk returns a tuple with the AcceptorUserUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateFavoriteUserPayload) GetAcceptorUserUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptorUserUuid, true
}

// SetAcceptorUserUuid sets field value
func (o *SchemasCreateFavoriteUserPayload) SetAcceptorUserUuid(v string) {
	o.AcceptorUserUuid = v
}

// GetDonorUserUuid returns the DonorUserUuid field value
func (o *SchemasCreateFavoriteUserPayload) GetDonorUserUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DonorUserUuid
}

// GetDonorUserUuidOk returns a tuple with the DonorUserUuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCreateFavoriteUserPayload) GetDonorUserUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DonorUserUuid, true
}

// SetDonorUserUuid sets field value
func (o *SchemasCreateFavoriteUserPayload) SetDonorUserUuid(v string) {
	o.DonorUserUuid = v
}

func (o SchemasCreateFavoriteUserPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasCreateFavoriteUserPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["acceptorUserUuid"] = o.AcceptorUserUuid
	toSerialize["donorUserUuid"] = o.DonorUserUuid
	return toSerialize, nil
}

func (o *SchemasCreateFavoriteUserPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"acceptorUserUuid",
		"donorUserUuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasCreateFavoriteUserPayload := _SchemasCreateFavoriteUserPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasCreateFavoriteUserPayload)

	if err != nil {
		return err
	}

	*o = SchemasCreateFavoriteUserPayload(varSchemasCreateFavoriteUserPayload)

	return err
}

type NullableSchemasCreateFavoriteUserPayload struct {
	value *SchemasCreateFavoriteUserPayload
	isSet bool
}

func (v NullableSchemasCreateFavoriteUserPayload) Get() *SchemasCreateFavoriteUserPayload {
	return v.value
}

func (v *NullableSchemasCreateFavoriteUserPayload) Set(val *SchemasCreateFavoriteUserPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasCreateFavoriteUserPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasCreateFavoriteUserPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasCreateFavoriteUserPayload(val *SchemasCreateFavoriteUserPayload) *NullableSchemasCreateFavoriteUserPayload {
	return &NullableSchemasCreateFavoriteUserPayload{value: val, isSet: true}
}

func (v NullableSchemasCreateFavoriteUserPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasCreateFavoriteUserPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


