package services

import (
	openapiMWChatWebSocket "mw-chat-bff/apiAutogenerated/mw-chat-websocket"
	"mw-chat-bff/internal/schemas"

	"github.com/gin-gonic/gin"
)

type MWChatWebSocketService struct {
	mwChatWebSocketAPI *openapiMWChatWebSocket.APIClient
}

func NewMWChatSocketService(mwChatWebSocketAPI *openapiMWChatWebSocket.APIClient) *MWChatWebSocketService {
	return &MWChatWebSocketService{mwChatWebSocketAPI}
}

func (mwChatWebSocketService *MWChatWebSocketService) SendMessage(ctx *gin.Context, roomID string, messageResponse *schemas.CreateMessageResponse) error {
	request := openapiMWChatWebSocket.SchemasSendMessagePayload{
		Message: openapiMWChatWebSocket.SchemasMessageResponse{
			Message:        messageResponse.Message.Message,
			MessageReaders: []openapiMWChatWebSocket.SchemasMessageReader{},
			OwnerId:        messageResponse.Message.OwnerID,
			OwnerImageUrl:  messageResponse.Message.OwnerImageURL,
			OwnerName:      messageResponse.Message.OwnerName,
			RoomId:         roomID,
		},
		Users: messageResponse.Users,
	}
	_, err := mwChatWebSocketService.mwChatWebSocketAPI.SocketAPI.SendMessageToSocket(ctx).Request(request).Execute()
	if err != nil {
		return err
	}

	return nil
}
