package services

import (
	openapiGeneral "mw-chat-bff/apiAutogenerated/general"

	"github.com/gin-gonic/gin"
	"github.com/samber/lo"
)

type UsersService struct {
	generalAPI *openapiGeneral.APIClient
}

func NewUsersService(generalAPI *openapiGeneral.APIClient) *UsersService {
	return &UsersService{generalAPI}
}

func (usersService *UsersService) GetChatUsers(ctx *gin.Context, userIDs []string) (map[string]PopulatedUser, error) {
	payload := lo.Map(userIDs, func(userID string, _ int) openapiGeneral.SchemasChatUserPayload {
		return openapiGeneral.SchemasChatUserPayload{
			UserId: userID,
		}
	})

	chatUsersData, _, err := usersService.generalAPI.UserAPI.GetChatUsersByUuids(ctx).Request(payload).Execute()
	if err != nil {
		return nil, err
	}

	userMap := lo.SliceToMap(chatUsersData, func(userData openapiGeneral.SchemasChatUserResponse) (string, PopulatedUser) {
		return userData.UserId, PopulatedUser{
			UserID:   userData.UserId,
			Name:     userData.Name,
			ImageURL: userData.ImageUrl,
		}
	})

	return userMap, nil
}
