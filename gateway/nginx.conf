user  nginx;

worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    proxy_max_temp_file_size 0;

    server {
        listen 80;
        server_name mastersway.netlify.app 127.0.0.1 localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }

   
    server {
        listen 443 ssl;
        server_name mastersway.netlify.app 127.0.0.1 localhost;

        ssl_certificate /etc/nginx/server.crt;
        ssl_certificate_key /etc/nginx/server.key;

        # mw-server
        location /api {
            resolver 127.0.0.11;
            # use mw-server instead of 172.17.0.1 
            proxy_pass http://172.17.0.1:8000;
            proxy_read_timeout 120s;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass_request_headers on;
        }

        # mw-chat-bff
        location /chat {
            resolver 127.0.0.11;
            # use mw-chat instead of 172.17.0.1
            proxy_pass http://172.17.0.1:7999;
            proxy_read_timeout 120s;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass_request_headers on;
        }

        # mw-chat-websoscket
        #location /mw-chat-websocket {
        #    resolver 127.0.0.11;
        #    # use mw-chat instead of 172.17.0.1
        #    proxy_pass http://172.17.0.1:7994;
        #    proxy_read_timeout 120s;
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_pass_request_headers on;
        #}
    }

    include /etc/nginx/conf.d/*.conf;
}
