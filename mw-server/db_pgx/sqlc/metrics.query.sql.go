// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: metrics.query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getListMetricsByWayUuid = `-- name: GetListMetricsByWayUuid :many
SELECT uuid, created_at, updated_at, description, is_done, done_date, metric_estimation, way_uuid FROM metrics
WHERE metrics.way_uuid = $1
ORDER BY created_at
`

func (q *Queries) GetListMetricsByWayUuid(ctx context.Context, wayUuid pgtype.UUID) ([]Metric, error) {
	rows, err := q.db.Query(ctx, getListMetricsByWayUuid, wayUuid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Metric{}
	for rows.Next() {
		var i Metric
		if err := rows.Scan(
			&i.Uuid,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Description,
			&i.IsDone,
			&i.DoneDate,
			&i.MetricEstimation,
			&i.WayUuid,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
