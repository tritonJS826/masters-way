// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: day_reports.query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getListDayReportsByWayUuid = `-- name: GetListDayReportsByWayUuid :many
SELECT uuid, way_uuid, created_at, updated_at, is_day_off FROM day_reports
WHERE day_reports.way_uuid = $1
ORDER BY day_reports.created_at DESC
`

func (q *Queries) GetListDayReportsByWayUuid(ctx context.Context, wayUuid pgtype.UUID) ([]DayReport, error) {
	rows, err := q.db.Query(ctx, getListDayReportsByWayUuid, wayUuid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []DayReport{}
	for rows.Next() {
		var i DayReport
		if err := rows.Scan(
			&i.Uuid,
			&i.WayUuid,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.IsDayOff,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
