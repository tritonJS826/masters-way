// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: way_tags.query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getListWayTagsByWayId = `-- name: GetListWayTagsByWayId :many
SELECT
    way_tags.uuid AS uuid,
    way_tags.name AS name
FROM way_tags
JOIN ways_way_tags ON ways_way_tags.way_tag_uuid = way_tags.uuid
WHERE ways_way_tags.way_uuid = $1
ORDER BY name
`

func (q *Queries) GetListWayTagsByWayId(ctx context.Context, wayUuid pgtype.UUID) ([]WayTag, error) {
	rows, err := q.db.Query(ctx, getListWayTagsByWayId, wayUuid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []WayTag{}
	for rows.Next() {
		var i WayTag
		if err := rows.Scan(&i.Uuid, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
