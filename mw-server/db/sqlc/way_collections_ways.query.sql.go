// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: way_collections_ways.query.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createWayCollectionsWays = `-- name: CreateWayCollectionsWays :one
INSERT INTO way_collections_ways(
    way_collections_uuid,
    way_uuid
) VALUES (
    $1, $2
) RETURNING way_collections_uuid, way_uuid
`

type CreateWayCollectionsWaysParams struct {
	WayCollectionsUuid uuid.UUID `json:"way_collections_uuid"`
	WayUuid            uuid.UUID `json:"way_uuid"`
}

func (q *Queries) CreateWayCollectionsWays(ctx context.Context, arg CreateWayCollectionsWaysParams) (WayCollectionsWay, error) {
	row := q.queryRow(ctx, q.createWayCollectionsWaysStmt, createWayCollectionsWays, arg.WayCollectionsUuid, arg.WayUuid)
	var i WayCollectionsWay
	err := row.Scan(&i.WayCollectionsUuid, &i.WayUuid)
	return i, err
}

const deleteWayCollectionsWaysByIds = `-- name: DeleteWayCollectionsWaysByIds :exec
DELETE FROM way_collections_ways
WHERE way_collections_uuid = $1 AND way_uuid = $2
`

type DeleteWayCollectionsWaysByIdsParams struct {
	WayCollectionsUuid uuid.UUID `json:"way_collections_uuid"`
	WayUuid            uuid.UUID `json:"way_uuid"`
}

func (q *Queries) DeleteWayCollectionsWaysByIds(ctx context.Context, arg DeleteWayCollectionsWaysByIdsParams) error {
	_, err := q.exec(ctx, q.deleteWayCollectionsWaysByIdsStmt, deleteWayCollectionsWaysByIds, arg.WayCollectionsUuid, arg.WayUuid)
	return err
}
