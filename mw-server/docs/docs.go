// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comments": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Create a new comment",
                "operationId": "create-comment",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommentPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/comments/{commentId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete comment by UUID",
                "operationId": "delete-comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update comment by UUID",
                "operationId": "update-comment",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateCommentPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommentPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/compositeWay": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compositeWay"
                ],
                "summary": "Add a way to composite way",
                "operationId": "create-compositeWay",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.AddWayToCompositeWayPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CompositeWayRelation"
                        }
                    }
                }
            }
        },
        "/compositeWay/{parentWayId}/{childWayId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compositeWay"
                ],
                "summary": "Delete composite way relation",
                "operationId": "delete-compositeWay relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parentWay ID",
                        "name": "parentWayId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "childWay ID",
                        "name": "childWayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/dayReports": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dayReport"
                ],
                "summary": "Create a new dayReport",
                "operationId": "create-dayReport",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateDayReportPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DayReportPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/dayReports/{dayReportId}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dayReport"
                ],
                "summary": "Update dayReport by UUID",
                "operationId": "update-dayReport",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateDayReportPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "dayReport ID",
                        "name": "dayReportId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DayReportPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/dayReports/{wayId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dayReport"
                ],
                "summary": "Get all dayReports by Way UUID",
                "operationId": "get-dayReports-by-Way-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.DayReportPopulatedResponse"
                            }
                        }
                    }
                }
            }
        },
        "/favoriteUserWays": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favoriteUserWay"
                ],
                "summary": "Create a new favoriteUserWay",
                "operationId": "create-favoriteUserWay",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateFavoriteUserWayPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/favoriteUserWays/{userUuid}/{wayUuid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favoriteUserWay"
                ],
                "summary": "Delete favoriteUserWay by UUID",
                "operationId": "delete-favoriteUserWay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user UUID",
                        "name": "userUuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/favoriteUsers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favoriteUser"
                ],
                "summary": "Create a new favorite user",
                "operationId": "create-favoriteUser",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateFavoriteUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/favoriteUsers/{donorUserUuid}/{acceptorUserUuid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favoriteUser"
                ],
                "summary": "Delete favoriteUser by UUID",
                "operationId": "delete-favoriteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "donorUser UUID",
                        "name": "donorUserUuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "acceptorUser UUID",
                        "name": "acceptorUserUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/fromUserMentoringRequests": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fromUserMentoringRequest"
                ],
                "summary": "Create a new fromUserMentoringRequest",
                "operationId": "create-fromUserMentoringRequest",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateFromUserMentoringRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/fromUserMentoringRequests/{userUuid}/{wayUuid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fromUserMentoringRequest"
                ],
                "summary": "Delete fromUserMentoringRequest by UUID",
                "operationId": "delete-fromUserMentoringRequest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user UUID",
                        "name": "userUuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "way UUID",
                        "name": "wayUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/jobDoneJobTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobDoneJobTag"
                ],
                "summary": "Create a new jobDoneJobTag",
                "operationId": "create-jobDoneJobTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateJobDoneJobTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/jobDoneJobTags/{jobTagId}/{jobDoneId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobDoneJobTag"
                ],
                "summary": "Delete jobDoneJobTag by UUID",
                "operationId": "delete-jobDoneJobTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jobDone ID",
                        "name": "jobDoneId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "jobTag UUID",
                        "name": "jobTagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/jobDones": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobDone"
                ],
                "summary": "Create a new jobDone",
                "operationId": "create-jobDone",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateJobDonePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.JobDonePopulatedResponse"
                        }
                    }
                }
            }
        },
        "/jobDones/{jobDoneId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobDone"
                ],
                "summary": "Delete jobDone by UUID",
                "operationId": "delete-jobDone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jobDone ID",
                        "name": "jobDoneId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobDone"
                ],
                "summary": "Update jobDone by UUID",
                "operationId": "update-jobDone",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateJobDone"
                        }
                    },
                    {
                        "type": "string",
                        "description": "jobDone UUID",
                        "name": "jobDoneId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.JobDonePopulatedResponse"
                        }
                    }
                }
            }
        },
        "/jobTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobTag"
                ],
                "summary": "Create a new jobTag",
                "operationId": "create-jobTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateJobTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.JobTagResponse"
                        }
                    }
                }
            }
        },
        "/jobTags/{jobTagId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobTag"
                ],
                "summary": "Delete jobTag by UUID",
                "operationId": "delete-jobTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jobTag ID",
                        "name": "jobTagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobTag"
                ],
                "summary": "Update jobTag by UUID",
                "operationId": "update-jobTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateJobTagPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "jobTag UUID",
                        "name": "jobTagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.JobTagResponse"
                        }
                    }
                }
            }
        },
        "/mentorUserWays": {
            "post": {
                "description": "Make user mentor and also added to appropriate mentoring collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentorUserWay"
                ],
                "summary": "Create a new mentorUserWay",
                "operationId": "create-mentorUserWay",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMentorUserWayPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mentorUserWay"
                ],
                "summary": "Delete mentorUserWay by UUID",
                "operationId": "delete-mentorUserWay",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteMentorUserWayPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/metrics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric"
                ],
                "summary": "Create a new metric",
                "operationId": "create-metric",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMetricPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MetricResponse"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric"
                ],
                "summary": "Delete metric by UUID",
                "operationId": "delete-metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "metric ID",
                        "name": "metricId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric"
                ],
                "summary": "Update metric by UUID",
                "operationId": "update-metric",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateMetricPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "metric UUID",
                        "name": "metricId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MetricResponse"
                        }
                    }
                }
            }
        },
        "/planJobTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planJobTag"
                ],
                "summary": "Create a new planJobTag",
                "operationId": "create-planJobTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreatePlanJobTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/planJobTags/{jobTagId}/{planId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planJobTag"
                ],
                "summary": "Delete planJobTag by UUID",
                "operationId": "delete-planJobTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jobTag ID",
                        "name": "jobTagId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/plans": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Create a new plan",
                "operationId": "create-plan",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreatePlanPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.PlanPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/plans/{planId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Delete plan by UUID",
                "operationId": "delete-plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Update plan by UUID",
                "operationId": "update-plan",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdatePlanPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "plan UUID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.PlanPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/problemJobTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "problemJobTag"
                ],
                "summary": "Create a new problemJobTag",
                "operationId": "create-problemJobTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateProblemJobTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/problemJobTags/{jobTagId}/{problemId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "problemJobTag"
                ],
                "summary": "Delete problemJobTag by UUID",
                "operationId": "delete-problemJobTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "problem ID",
                        "name": "problemId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "jobTag ID",
                        "name": "jobTagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/problems": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "problem"
                ],
                "summary": "Create a new problem",
                "operationId": "create-problem",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateProblemPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ProblemPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/problems/{problemId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "problem"
                ],
                "summary": "Delete problem by UUID",
                "operationId": "delete-problem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "problem ID",
                        "name": "problemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "problem"
                ],
                "summary": "Update problem by UUID",
                "operationId": "update-problem",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateProblemPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "problem ID",
                        "name": "problemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ProblemPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/toUserMentoringRequests": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "toUserMentoringRequest"
                ],
                "summary": "Create a new userMentoringRequest",
                "operationId": "create-userMentoringRequest",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserMentoringRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toUserMentoringRequests/{userUuid}/{wayUuid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "toUserMentoringRequest"
                ],
                "summary": "Delete toUserMentoringReques by UUID",
                "operationId": "delete-toUserMentoringRequest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user UUID",
                        "name": "userUuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "way UUID",
                        "name": "wayUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/userTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userTag"
                ],
                "summary": "Create a new userTag",
                "operationId": "create-userTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserTagResponse"
                        }
                    }
                }
            }
        },
        "/userTags/{userTagId}/{userId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userTag"
                ],
                "summary": "Delete userTag by UUID",
                "operationId": "delete-userTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userTag ID",
                        "name": "userTagId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get users with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "operationId": "get-all-users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of user email for filters",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of user name for filters",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllUsersResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Email should be unique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserPlainResponse"
                        }
                    }
                }
            }
        },
        "/users/getOrCreateByFirebaseId": {
            "post": {
                "description": "Temporal method. Shod be removed after improving auth logic. Email should be unique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new user or return already existent user if user with this firebase id already exist",
                "operationId": "create-user-if-required",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user by UUID",
                "operationId": "get-user-by-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserPopulatedResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user by UUID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user by UUID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateUserPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserPlainResponse"
                        }
                    }
                }
            }
        },
        "/wayCollectionWays": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayCollectionWay"
                ],
                "summary": "Create a new wayCollectionWay",
                "operationId": "create-wayCollectionWay",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateWayCollectionWay"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/wayCollectionWays/{wayId}/{wayCollectionId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayCollectionWay"
                ],
                "summary": "Delete wayCollectionWay by UUID",
                "operationId": "delete-wayCollectionWay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wayCollection ID",
                        "name": "wayCollectionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/wayCollections": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayCollection"
                ],
                "summary": "Create a new wayCollection",
                "operationId": "create-wayCollection",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateWayCollectionPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayCollectionPopulatedResponse"
                        }
                    }
                }
            }
        },
        "/wayCollections/{wayCollectionId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayCollection"
                ],
                "summary": "Delete wayCollection by UUID",
                "operationId": "delete-wayCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wayCollection ID",
                        "name": "wayCollectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayCollection"
                ],
                "summary": "Update wayCollection by UUID",
                "operationId": "update-wayCollection",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateWayCollectionPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "wayCollection ID",
                        "name": "wayCollectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayCollectionPlainResponse"
                        }
                    }
                }
            }
        },
        "/wayTags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayTag"
                ],
                "summary": "Create a new wayTag",
                "operationId": "create-wayTag",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateWayTagPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayTagResponse"
                        }
                    }
                }
            }
        },
        "/wayTags/{wayTagId}/{wayId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wayTag"
                ],
                "summary": "Delete wayTag by UUID",
                "operationId": "delete-wayTag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wayTag ID",
                        "name": "wayTagId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ways": {
            "get": {
                "description": "Get ways with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "way"
                ],
                "summary": "Get all ways",
                "operationId": "get-all-ways",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ways type: all | completed | inProgress | abandoned",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllWaysResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "way"
                ],
                "summary": "Create a new way",
                "operationId": "create-way",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateWay"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayPlainResponse"
                        }
                    }
                }
            }
        },
        "/ways/{wayId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "way"
                ],
                "summary": "Get way by UUID",
                "operationId": "get-way-by-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayPopulatedResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "way"
                ],
                "summary": "Delete way by UUID",
                "operationId": "delete-way",
                "parameters": [
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "way"
                ],
                "summary": "Update way by UUID",
                "operationId": "update-way",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateWayPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "way ID",
                        "name": "wayId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.WayPlainResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemas.AddWayToCompositeWayPayload": {
            "type": "object",
            "required": [
                "childWayUuid",
                "parentWayUuid"
            ],
            "properties": {
                "childWayUuid": {
                    "type": "string"
                },
                "parentWayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CommentPopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "dayReportUuid",
                "description",
                "ownerName",
                "ownerUuid",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CompositeWayRelation": {
            "type": "object",
            "required": [
                "childWayUuid",
                "parentWayUuid"
            ],
            "properties": {
                "childWayUuid": {
                    "type": "string"
                },
                "parentWayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCommentPayload": {
            "type": "object",
            "required": [
                "dayReportUuid",
                "description",
                "ownerUuid"
            ],
            "properties": {
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateDayReportPayload": {
            "type": "object",
            "required": [
                "isDayOff",
                "wayUuid"
            ],
            "properties": {
                "isDayOff": {
                    "type": "boolean"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateFavoriteUserPayload": {
            "type": "object",
            "required": [
                "acceptorUserUuid",
                "donorUserUuid"
            ],
            "properties": {
                "acceptorUserUuid": {
                    "type": "string"
                },
                "donorUserUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateFavoriteUserWayPayload": {
            "type": "object",
            "required": [
                "userUuid",
                "wayUuid"
            ],
            "properties": {
                "userUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateFromUserMentoringRequestPayload": {
            "type": "object",
            "required": [
                "userUuid",
                "wayUuid"
            ],
            "properties": {
                "userUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateJobDoneJobTagPayload": {
            "type": "object",
            "required": [
                "jobDoneUuid",
                "jobTagUuid"
            ],
            "properties": {
                "jobDoneUuid": {
                    "type": "string"
                },
                "jobTagUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateJobDonePayload": {
            "type": "object",
            "required": [
                "dayReportUuid",
                "description",
                "ownerUuid",
                "time"
            ],
            "properties": {
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "schemas.CreateJobTagPayload": {
            "type": "object",
            "required": [
                "color",
                "description",
                "name",
                "wayUuid"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateMentorUserWayPayload": {
            "type": "object",
            "required": [
                "userUuid",
                "wayUuid"
            ],
            "properties": {
                "userUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateMetricPayload": {
            "type": "object",
            "required": [
                "description",
                "doneDate",
                "estimationTime",
                "isDone",
                "wayUuid"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "doneDate": {
                    "type": "string"
                },
                "estimationTime": {
                    "type": "integer"
                },
                "isDone": {
                    "type": "boolean"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreatePlanJobTagPayload": {
            "type": "object",
            "required": [
                "jobTagUuid",
                "planUuid"
            ],
            "properties": {
                "jobTagUuid": {
                    "type": "string"
                },
                "planUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreatePlanPayload": {
            "type": "object",
            "required": [
                "dayReportUuid",
                "description",
                "isDone",
                "ownerUuid",
                "time"
            ],
            "properties": {
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "schemas.CreateProblemJobTagPayload": {
            "type": "object",
            "required": [
                "jobTagUuid",
                "problemUuid"
            ],
            "properties": {
                "jobTagUuid": {
                    "type": "string"
                },
                "problemUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateProblemPayload": {
            "type": "object",
            "required": [
                "dayReportUuid",
                "description",
                "isDone",
                "ownerUuid"
            ],
            "properties": {
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "ownerUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateUserMentoringRequestPayload": {
            "type": "object",
            "required": [
                "userUuid",
                "wayUuid"
            ],
            "properties": {
                "userUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateUserPayload": {
            "type": "object",
            "required": [
                "description",
                "email",
                "firebaseId",
                "imageUrl",
                "isMentor",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firebaseId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "isMentor": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateUserTagPayload": {
            "type": "object",
            "required": [
                "name",
                "ownerUuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateWay": {
            "type": "object",
            "required": [
                "copiedFromWayUuid",
                "estimationTime",
                "goalDescription",
                "isCompleted",
                "isPrivate",
                "name",
                "ownerUuid"
            ],
            "properties": {
                "copiedFromWayUuid": {
                    "type": "string"
                },
                "estimationTime": {
                    "type": "integer"
                },
                "goalDescription": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateWayCollectionPayload": {
            "type": "object",
            "required": [
                "name",
                "ownerUuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateWayCollectionWay": {
            "type": "object",
            "required": [
                "wayCollectionUuid",
                "wayUuid"
            ],
            "properties": {
                "wayCollectionUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateWayTagPayload": {
            "type": "object",
            "required": [
                "name",
                "wayUuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.DayReportPopulatedResponse": {
            "type": "object",
            "required": [
                "comments",
                "createdAt",
                "isDayOff",
                "jobsDone",
                "plans",
                "problems",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CommentPopulatedResponse"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "isDayOff": {
                    "type": "boolean"
                },
                "jobsDone": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.JobDonePopulatedResponse"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.PlanPopulatedResponse"
                    }
                },
                "problems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ProblemPopulatedResponse"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteMentorUserWayPayload": {
            "type": "object",
            "required": [
                "userUuid",
                "wayUuid"
            ],
            "properties": {
                "userUuid": {
                    "type": "string"
                },
                "wayUuid": {
                    "type": "string"
                }
            }
        },
        "schemas.GetAllUsersResponse": {
            "type": "object",
            "required": [
                "size",
                "users"
            ],
            "properties": {
                "size": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponseWithInfo"
                    }
                }
            }
        },
        "schemas.GetAllWaysResponse": {
            "type": "object",
            "required": [
                "size",
                "ways"
            ],
            "properties": {
                "size": {
                    "type": "integer"
                },
                "ways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayPlainResponse"
                    }
                }
            }
        },
        "schemas.JobDonePopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "dayReportUuid",
                "description",
                "ownerName",
                "ownerUuid",
                "tags",
                "time",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.JobTagResponse"
                    }
                },
                "time": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.JobTagResponse": {
            "type": "object",
            "required": [
                "color",
                "description",
                "name",
                "uuid"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.MetricResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "doneDate",
                "estimationTime",
                "isDone",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "doneDate": {
                    "type": "string",
                    "x-nullable": true
                },
                "estimationTime": {
                    "type": "integer"
                },
                "isDone": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.PlanPopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "dayReportUuid",
                "description",
                "isDone",
                "ownerName",
                "ownerUuid",
                "tags",
                "time",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "ownerName": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.JobTagResponse"
                    }
                },
                "time": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.ProblemPopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "dayReportUuid",
                "description",
                "isDone",
                "ownerName",
                "ownerUuid",
                "tags",
                "updatedAt",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dayReportUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "ownerName": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.JobTagResponse"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateCommentPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateDayReportPayload": {
            "type": "object",
            "properties": {
                "isDayOff": {
                    "type": "boolean"
                }
            }
        },
        "schemas.UpdateJobDone": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "schemas.UpdateJobTagPayload": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateMetricPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "doneDate": {
                    "type": "string",
                    "x-nullable": true
                },
                "estimationTime": {
                    "type": "integer"
                },
                "isDone": {
                    "type": "boolean"
                }
            }
        },
        "schemas.UpdatePlanPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "schemas.UpdateProblemPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                }
            }
        },
        "schemas.UpdateUserPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "isMentor": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateWayCollectionPayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateWayPayload": {
            "type": "object",
            "properties": {
                "estimationTime": {
                    "type": "integer"
                },
                "goalDescription": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UserPlainResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "email",
                "imageUrl",
                "isMentor",
                "name",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "isMentor": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.UserPlainResponseWithInfo": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "email",
                "favoriteForUsers",
                "favoriteWays",
                "imageUrl",
                "isMentor",
                "mentoringWays",
                "name",
                "ownWays",
                "tags",
                "uuid"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "favoriteForUsers": {
                    "type": "integer"
                },
                "favoriteWays": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "isMentor": {
                    "type": "boolean"
                },
                "mentoringWays": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownWays": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserTagResponse"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.UserPopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "email",
                "favoriteForUsers",
                "favoriteUsers",
                "imageUrl",
                "isMentor",
                "name",
                "tags",
                "uuid",
                "wayCollections",
                "wayRequests"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "favoriteForUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "favoriteUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponse"
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "isMentor": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserTagResponse"
                    }
                },
                "uuid": {
                    "type": "string"
                },
                "wayCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayCollectionPopulatedResponse"
                    }
                },
                "wayRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayPlainResponse"
                    }
                }
            }
        },
        "schemas.UserTagResponse": {
            "type": "object",
            "required": [
                "name",
                "uuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.WayCollectionPlainResponse": {
            "type": "object",
            "required": [
                "name",
                "uuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.WayCollectionPopulatedResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "name",
                "ownerUuid",
                "type",
                "updatedAt",
                "uuid",
                "ways"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "ways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayPlainResponse"
                    }
                }
            }
        },
        "schemas.WayPlainResponse": {
            "type": "object",
            "required": [
                "copiedFromWayUuid",
                "createdAt",
                "dayReportsAmount",
                "estimationTime",
                "favoriteForUsers",
                "goalDescription",
                "isCompleted",
                "isPrivate",
                "mentors",
                "metricsDone",
                "metricsTotal",
                "name",
                "owner",
                "updatedAt",
                "uuid",
                "wayTags"
            ],
            "properties": {
                "copiedFromWayUuid": {
                    "type": "string",
                    "x-nullable": true
                },
                "createdAt": {
                    "type": "string"
                },
                "dayReportsAmount": {
                    "type": "integer"
                },
                "estimationTime": {
                    "type": "integer"
                },
                "favoriteForUsers": {
                    "type": "integer"
                },
                "goalDescription": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "mentors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponse"
                    }
                },
                "metricsDone": {
                    "type": "integer"
                },
                "metricsTotal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/schemas.UserPlainResponse"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "wayTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayTagResponse"
                    }
                }
            }
        },
        "schemas.WayPopulatedResponse": {
            "type": "object",
            "required": [
                "children",
                "copiedFromWayUuid",
                "createdAt",
                "dayReports",
                "estimationTime",
                "favoriteForUsersAmount",
                "formerMentors",
                "goalDescription",
                "isCompleted",
                "isPrivate",
                "jobTags",
                "mentorRequests",
                "mentors",
                "metrics",
                "name",
                "owner",
                "updatedAt",
                "uuid",
                "wayTags"
            ],
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayPopulatedResponse"
                    }
                },
                "copiedFromWayUuid": {
                    "type": "string",
                    "x-nullable": true
                },
                "createdAt": {
                    "type": "string"
                },
                "dayReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.DayReportPopulatedResponse"
                    }
                },
                "estimationTime": {
                    "type": "integer"
                },
                "favoriteForUsersAmount": {
                    "type": "integer"
                },
                "formerMentors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponse"
                    }
                },
                "goalDescription": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "jobTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.JobTagResponse"
                    }
                },
                "mentorRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponse"
                    }
                },
                "mentors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserPlainResponse"
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.MetricResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/schemas.UserPlainResponse"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "wayTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.WayTagResponse"
                    }
                }
            }
        },
        "schemas.WayTagResponse": {
            "type": "object",
            "required": [
                "name",
                "uuid"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Masters way API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
