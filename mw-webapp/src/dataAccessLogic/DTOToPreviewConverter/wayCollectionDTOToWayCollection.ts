import {SchemasWayCollectionPopulatedResponse} from "src/apiAutogenerated/general";
import {getWayStatus, WayStatus} from "src/logic/waysTable/wayStatus";
import {UserPlain, WayCollection} from "src/model/businessModel/User";
import {WayPreview} from "src/model/businessModelPreview/WayPreview";

/**
 * Convert {@link UserDTO} to {@link User}
 */
export const wayCollectionDTOToWayCollection = (wayCollectionDTO: SchemasWayCollectionPopulatedResponse): WayCollection => {
  const wayCollection = new WayCollection({
    ...wayCollectionDTO,
    createdAt: new Date(wayCollectionDTO.createdAt),
    updatedAt: new Date(wayCollectionDTO.updatedAt),
    ways: wayCollectionDTO.ways.map((way) => {
      const status = getWayStatus({
        status: way.isCompleted ? WayStatus.completed : null,
        lastUpdate: new Date(way.updatedAt),
      });

      const wayPreview = new WayPreview({
        ...way,
        status,
        createdAt: new Date(way.createdAt),
        lastUpdate: new Date(way.updatedAt),
        owner: new UserPlain({
          ...way.owner,
          createdAt: new Date(way.owner.createdAt),
        }),
        mentors: way.mentors.map(rawUser => new UserPlain({
          createdAt: new Date(rawUser.createdAt),
          description: rawUser.description,
          email: rawUser.email,
          imageUrl: rawUser.imageUrl,
          isMentor: rawUser.isMentor,
          name: rawUser.name,
          uuid: rawUser.uuid,
        })),
      });

      return wayPreview;
    }),
  });

  return wayCollection;
};
