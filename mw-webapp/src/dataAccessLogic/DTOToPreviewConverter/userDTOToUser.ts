import {SchemasUserPopulatedResponse} from "src/apiAutogenerated";
import {getWayStatus} from "src/logic/waysTable/wayStatus";
import {User, UserPlain, WayCollection} from "src/model/businessModel/User";
import {WayPreview} from "src/model/businessModelPreview/WayPreview";
import {Language} from "src/utils/LanguageWorker";

/**
 * Convert {@link UserDTO} to {@link User}
 */
export const UserDTOToUserConverter = (userDTO: SchemasUserPopulatedResponse): User => {
  return new User({
    ...userDTO,
    wayCollections: userDTO.wayCollections.map((wayCollectionDTO) => {
      const wayCollection: WayCollection = {
        ...wayCollectionDTO,
        createdAt: new Date(wayCollectionDTO.createdAt),
        updatedAt: new Date(wayCollectionDTO.updatedAt),
        ways: wayCollectionDTO.ways.map((way) => {
          const status = getWayStatus({
            status: way.isCompleted ? "Completed" : null,
            lastUpdate: new Date(way.updatedAt),
            language: Language.ENGLISH,
          });

          const wayPreview = new WayPreview({
            ...way,
            status,
            createdAt: new Date(way.createdAt),
            lastUpdate: new Date(way.updatedAt),
            mentors: way.mentors.map(rawUser => new UserPlain({
              createdAt: new Date(rawUser.createdAt),
              description: rawUser.description,
              email: rawUser.email,
              imageUrl: rawUser.imageUrl,
              isMentor: rawUser.isMentor,
              name: rawUser.name,
              uuid: rawUser.uuid,
            })),
          });

          return wayPreview;
        }),
      };

      return wayCollection;
    }),
    createdAt: new Date(userDTO.createdAt),
    favoriteUsers: userDTO.favoriteUsers.map(plainUserDTO => new UserPlain({
      createdAt: new Date(plainUserDTO.createdAt),
      description: plainUserDTO.description,
      email: plainUserDTO.email,
      imageUrl: plainUserDTO.imageUrl,
      isMentor: plainUserDTO.isMentor,
      name: plainUserDTO.name,
      uuid: plainUserDTO.uuid,
    })),
    favoriteForUserUuids: userDTO.favoriteForUsers,
    imageUrl: userDTO.imageUrl ?? "",
    // Why do we need so huge model here WayNotSaturatedUser? we should just provide basic information in modal
    wayRequests: [],
  });
};
