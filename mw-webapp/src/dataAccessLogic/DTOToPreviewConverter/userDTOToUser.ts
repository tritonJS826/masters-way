import {SchemasUserPopulatedResponse} from "src/apiAutogenerated";
import {defaultWayCollectionsDTOToDefaultWayCollections}
  from "src/dataAccessLogic/DTOToPreviewConverter/defaultWayCollectionsDTOToDefaultWayCollections";
import {wayCollectionDTOToWayCollection} from "src/dataAccessLogic/DTOToPreviewConverter/wayCollectionDTOToWayCollection";
import {User, UserPlain} from "src/model/businessModel/User";

/**
 * Convert {@link UserDTO} to {@link User}
 */
export const UserDTOToUserConverter = (userDTO: SchemasUserPopulatedResponse): User => {
  return new User({
    ...userDTO,
    customWayCollections: userDTO.customWayCollections.map(wayCollectionDTOToWayCollection),
    defaultWayCollections: defaultWayCollectionsDTOToDefaultWayCollections(userDTO.defaultWayCollections),
    createdAt: new Date(userDTO.createdAt),
    favoriteUsers: userDTO.favoriteUsers.map(plainUserDTO => new UserPlain({
      createdAt: new Date(plainUserDTO.createdAt),
      description: plainUserDTO.description,
      email: plainUserDTO.email,
      imageUrl: plainUserDTO.imageUrl,
      isMentor: plainUserDTO.isMentor,
      name: plainUserDTO.name,
      uuid: plainUserDTO.uuid,
    })),
    favoriteForUserUuids: userDTO.favoriteForUsers,
    imageUrl: userDTO.imageUrl ?? "",
    wayRequests: [],
  });
};
