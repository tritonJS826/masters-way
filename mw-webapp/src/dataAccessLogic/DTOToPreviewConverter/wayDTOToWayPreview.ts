import {SchemasWayPlainResponse} from "src/apiAutogenerated";
import {getWayStatus, WayStatus} from "src/logic/waysTable/wayStatus";
import {UserPreview} from "src/model/businessModelPreview/UserPreview";
import {UserPreviewShort} from "src/model/businessModelPreview/UserPreviewShort";
import {WayPreview} from "src/model/businessModelPreview/WayPreview";

/**
 * Convert {@link SchemasWayPlainResponse} to {@link WayPreview}
 */
export const wayDTOToWayPreview = (wayDTO: SchemasWayPlainResponse): WayPreview => {
  const status = getWayStatus({
    status: wayDTO.isCompleted ? WayStatus.completed : null,
    lastUpdate: new Date(wayDTO.updatedAt),
  });

  const mentors = wayDTO.mentors.map((mentor) => new UserPreview({
    ...mentor,
    customWayCollections: [],
    favoriteForUserUuids: [],
    favoriteUserUuids: [],
    tags: [],
    wayRequests: [],
    createdAt: new Date(mentor.createdAt),
    imageUrl: mentor.imageUrl ?? "",
  }));

  return new WayPreview({
    ...wayDTO,
    status,
    createdAt: new Date(wayDTO.createdAt),
    lastUpdate: new Date(wayDTO.updatedAt),
    mentors,
    owner: new UserPreviewShort({
      ...wayDTO.owner,
      createdAt: new Date(wayDTO.owner.createdAt),
    }),
  });
};
