import {
  GetAllUsersRequest,
  GetUserByUuidRequest,
  SchemasGetAllUsersResponse,
  SchemasUserPlainResponse,
  SchemasUserPopulatedResponse,
  UpdateUserRequest,
} from "src/apiAutogenerated/general";
import {userService} from "src/service/services";

/**
 * Pagination and filter params
 */
export interface GetUsersParams {

  /**
   * Page
   */
  page?: number;

  /**
   * Limit
   */
  limit?: number;

  /**
   * Partial user email
   */
  email?: string;

  /**
   * Partial user name
   */
  name?: string;

  /**
   * Mentor status filter
   */
  mentorStatus?: string;

}

/**
 * Provides methods to interact with the Users
 */
export class UserService {

  /**
   * Get all users
   */
  public static async getAllUsers(requestParameters: GetAllUsersRequest): Promise<SchemasGetAllUsersResponse> {
    const allUsers = await userService.getAllUsers(requestParameters);

    return allUsers;
  }

  /**
   * Get user by UUID
   */
  public static async getUserByUuid(requestParameters: GetUserByUuidRequest): Promise<SchemasUserPopulatedResponse> {
    const user = await userService.getUserByUuid(requestParameters);

    return user;
  }

  /**
   * Update user
   */
  public static async updateUser(requestParameters: UpdateUserRequest): Promise<SchemasUserPlainResponse> {
    const updatedUser = await userService.updateUser(requestParameters);

    return updatedUser;
  }

}
