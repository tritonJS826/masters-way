@import "src/styles/variables";

.pageLayout {
  max-width: $maxWidthContainer;
  padding: 0 $paddingMedium;
  margin: 0 auto;
  gap: $gapExtraBig;
}

.userInfoBlock {
  @include regularContainer;
  min-width: $minWidthBlock;
  gap: $gapSmall;
}

.userMainInfoBlock {
  gap: $gapLarge;

  grid-template-columns: minmax($minWidthBlock, 1fr) minmax(
      $minWidthBlock,
      1.5fr
    );

  @media (max-width: $mediaWidthTabletBig) {
    grid-template-columns: minmax($minWidthBlock, 1.5fr) minmax(
        $minWidthBlock,
        1fr
      );
  }

  @media (max-width: $mediaWidthTablet) {
    grid-template-columns: 1fr;
  }
}

.AvatarWithConnectButton {
  align-items: center;
  justify-content: space-between;
  gap: $gapMedium;
}

.userAboutBlock {
  flex-wrap: wrap;
  gap: $gapBig;
}

.nameEmailSection {
  flex: 1;
  gap: $gapMedium;
}

.nameSection {
  justify-content: space-between;
}

.ownerName {
  input {
    height: $heightH2;
  }
}

.userDescriptionSection {
  gap: $gapSmall;
}

.userDescription {
  line-height: $lineHeightPrimary;

  textarea {
    line-height: $lineHeightPrimary;
  }
}

.ownerEmail {
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  text-overflow: ellipsis;
  white-space: initial;
}

.userSkillsAndSocialBlock {
  gap: $gapMedium;
}

.skillsTitleBlock {
  align-items: center;
  gap: $gapMedium;
}

.userTagsContainer {
  flex-wrap: wrap;
  align-items: center;
}

.tabsSectionContainer {
  @include regularContainer;
  gap: $gapExtraLarge;
}

.tabsSection {
  display: grid;
  gap: $gapSmall;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
}

.collectionGroup {
  gap: $gapBig;
}

.collectionButton {
  height: 123px;
  margin-bottom: auto;
}

.temporalBlock {
  flex-wrap: wrap;
  @include regularContainer;
}

.disabled {
  cursor: default;

  &:hover {
    background-color: var(--secondaryBgBtnColor);
  }

  &:active {
    border: none;
    background-color: var(--secondaryBgBtnColor);
    color: var(--primaryTextColor);
  }
}

.supportBlock {
  flex-wrap: wrap;
}
