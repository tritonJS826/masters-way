import {BrowserRouter} from "react-router-dom";
import type {StoryObj} from "@storybook/react";
import {SchemasUserPlainResponse} from "src/apiAutogenerated";
import {WayCard} from "src/component/wayCard/WayCard";
import {WayPreview} from "src/model/businessModelPreview/WayPreview";

const meta = {
  title: "WayCard",
  component: WayCard,
  parameters: {layout: "centered"},
  tags: ["autodocs"],
};

export default meta;

type Story = StoryObj<typeof meta>;

const defaultWayOwner: SchemasUserPlainResponse = {
  uuid: "user1",
  name: "Ekaterina Ver",
  email: "ekaterina@gmail.com",
  description: "developer",
  createdAt: new Date().toISOString(),
  imageUrl: "",
  isMentor: false,
};

const defaultWayPreview: WayPreview = {
  uuid: "1",
  name: "Way's name Way's name Way's name Way's name Way's name",
  isPrivate: false,
  wayTags: [
    {
      uuid: "1",
      name: "IT",
    },
    {
      uuid: "2",
      name: "Development",
    },
    {
      uuid: "3",
      name: "Web",
    },
  ],
  copiedFromWayUuid: "",
  createdAt: new Date("2024-02-11"),
  dayReportsAmount: 4,
  estimationTime: 0,
  favoriteForUsers: 5,
  goalDescription: "It's my own goal, and I'm very happy. It's my own goal, and I'm very happy, I'm very happy, I'm very happy",
  status: null,
  lastUpdate: new Date("2024-02-11"),
  mentors: [
    {
      uuid: "user2",
      name: "Victor",
      email: "emailVictor@gmail.com",
      description: "developerMentor",
      createdAt: new Date().toISOString(),
      imageUrl: "",
      isMentor: false,
    },
    {
      uuid: "user3",
      name: "Ekaterina",
      email: "email@gmail.com",
      description: "developerMentor",
      createdAt: new Date().toISOString(),
      imageUrl: "",
      isMentor: false,
    },
  ],
  metrics: [],
  owner: defaultWayOwner,
};

export const Default: Story = {
  args: {wayPreview: defaultWayPreview},
  render: (args) => (
    <BrowserRouter>
      <WayCard {...args} />
    </BrowserRouter>
  ),
};

