import {
  CreateWayRequest,
  DeleteWayRequest,
  GetWayByUuidRequest,
  SchemasGetAllWaysResponse,
  SchemasWayPlainResponse,
  SchemasWayPopulatedResponse,
  UpdateWayRequest,
} from "src/apiAutogenerated";
import {wayService} from "src/serviceUpdated/services";

/**
 * Provides methods to interact with the Ways
 */
export class WayService {

  /**
   * Get all ways
   */
  public static async getAllWays(): Promise<SchemasGetAllWaysResponse> {
    const allWays = await wayService.getAllWays();

    return allWays;
  }

  /**
   * Create way
   */
  public static async createWay(requestParameters: CreateWayRequest): Promise<SchemasWayPlainResponse> {
    const way = await wayService.createWay(requestParameters);

    return way;
  }

  /**
   * Get way by UUID
   */
  public static async getWayByUuid(requestParameters: GetWayByUuidRequest): Promise<SchemasWayPopulatedResponse> {
    const way = await wayService.getWayByUuid(requestParameters);

    return way;
  }

  /**
   * Update way
   */
  public static async updateWay(requestParameters: UpdateWayRequest): Promise<SchemasWayPlainResponse> {
    const updatedWay = await wayService.updateWay(requestParameters);

    return updatedWay;
  }

  /**
   * Delete way
   */
  public static async deleteWay(requestParameters: DeleteWayRequest): Promise<void> {
    await wayService.deleteWay(requestParameters);
  }

}

