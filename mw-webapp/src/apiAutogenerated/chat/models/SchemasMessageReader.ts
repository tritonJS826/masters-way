// @ts-nocheck
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchemasMessageReader
 */
export interface SchemasMessageReader {
    /**
     * 
     * @type {string}
     * @memberof SchemasMessageReader
     */
    ownerImageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasMessageReader
     */
    ownerName: string | null;
    /**
     * 
     * @type {string}
     * @memberof SchemasMessageReader
     */
    readDate: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasMessageReader
     */
    userId: string;
}

/**
 * Check if a given object implements the SchemasMessageReader interface.
 */
export function instanceOfSchemasMessageReader(
    value: object
): boolean {
    let isInstance = true;
    isInstance = isInstance && "ownerImageUrl" in value;
    isInstance = isInstance && "ownerName" in value;
    isInstance = isInstance && "readDate" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function SchemasMessageReaderFromJSON(json: any): SchemasMessageReader {
    return SchemasMessageReaderFromJSONTyped(json, false);
}

export function SchemasMessageReaderFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): SchemasMessageReader {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerImageUrl': json['ownerImageUrl'],
        'ownerName': json['ownerName'],
        'readDate': json['readDate'],
        'userId': json['userId'],
    };
}


export function SchemasMessageReaderToJSON(value?: SchemasMessageReader | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerImageUrl': value.ownerImageUrl,
        'ownerName': value.ownerName,
        'readDate': value.readDate,
        'userId': value.userId,
    };
}

