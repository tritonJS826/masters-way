// @ts-nocheck
/* eslint-disable */
/**
 * Masters way API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SchemasCommentPlainResponse } from './SchemasCommentPlainResponse';
import {
    SchemasCommentPlainResponseFromJSON,
    SchemasCommentPlainResponseFromJSONTyped,
    SchemasCommentPlainResponseToJSON,
} from './SchemasCommentPlainResponse';
import type { SchemasJobDonePlainResponse } from './SchemasJobDonePlainResponse';
import {
    SchemasJobDonePlainResponseFromJSON,
    SchemasJobDonePlainResponseFromJSONTyped,
    SchemasJobDonePlainResponseToJSON,
} from './SchemasJobDonePlainResponse';
import type { SchemasPlanPlainResponse } from './SchemasPlanPlainResponse';
import {
    SchemasPlanPlainResponseFromJSON,
    SchemasPlanPlainResponseFromJSONTyped,
    SchemasPlanPlainResponseToJSON,
} from './SchemasPlanPlainResponse';
import type { SchemasProblemPlainResponse } from './SchemasProblemPlainResponse';
import {
    SchemasProblemPlainResponseFromJSON,
    SchemasProblemPlainResponseFromJSONTyped,
    SchemasProblemPlainResponseToJSON,
} from './SchemasProblemPlainResponse';

/**
 * 
 * @export
 * @interface SchemasDayReportPlainResponse
 */
export interface SchemasDayReportPlainResponse {
    /**
     * 
     * @type {Array<SchemasCommentPlainResponse>}
     * @memberof SchemasDayReportPlainResponse
     */
    comments: Array<SchemasCommentPlainResponse>;
    /**
     * 
     * @type {string}
     * @memberof SchemasDayReportPlainResponse
     */
    createdAt: string;
    /**
     * 
     * @type {boolean}
     * @memberof SchemasDayReportPlainResponse
     */
    isDayOff: boolean;
    /**
     * 
     * @type {Array<SchemasJobDonePlainResponse>}
     * @memberof SchemasDayReportPlainResponse
     */
    jobsDone: Array<SchemasJobDonePlainResponse>;
    /**
     * 
     * @type {Array<SchemasPlanPlainResponse>}
     * @memberof SchemasDayReportPlainResponse
     */
    plans: Array<SchemasPlanPlainResponse>;
    /**
     * 
     * @type {Array<SchemasProblemPlainResponse>}
     * @memberof SchemasDayReportPlainResponse
     */
    problems: Array<SchemasProblemPlainResponse>;
    /**
     * 
     * @type {string}
     * @memberof SchemasDayReportPlainResponse
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the SchemasDayReportPlainResponse interface.
 */
export function instanceOfSchemasDayReportPlainResponse(
    value: object
): boolean {
    let isInstance = true;
    isInstance = isInstance && "comments" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "isDayOff" in value;
    isInstance = isInstance && "jobsDone" in value;
    isInstance = isInstance && "plans" in value;
    isInstance = isInstance && "problems" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function SchemasDayReportPlainResponseFromJSON(json: any): SchemasDayReportPlainResponse {
    return SchemasDayReportPlainResponseFromJSONTyped(json, false);
}

export function SchemasDayReportPlainResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): SchemasDayReportPlainResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comments': ((json['comments'] as Array<any>).map(SchemasCommentPlainResponseFromJSON)),
        'createdAt': json['createdAt'],
        'isDayOff': json['isDayOff'],
        'jobsDone': ((json['jobsDone'] as Array<any>).map(SchemasJobDonePlainResponseFromJSON)),
        'plans': ((json['plans'] as Array<any>).map(SchemasPlanPlainResponseFromJSON)),
        'problems': ((json['problems'] as Array<any>).map(SchemasProblemPlainResponseFromJSON)),
        'updatedAt': json['updatedAt'],
    };
}


export function SchemasDayReportPlainResponseToJSON(value?: SchemasDayReportPlainResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comments': ((value.comments as Array<any>).map(SchemasCommentPlainResponseToJSON)),
        'createdAt': value.createdAt,
        'isDayOff': value.isDayOff,
        'jobsDone': ((value.jobsDone as Array<any>).map(SchemasJobDonePlainResponseToJSON)),
        'plans': ((value.plans as Array<any>).map(SchemasPlanPlainResponseToJSON)),
        'problems': ((value.problems as Array<any>).map(SchemasProblemPlainResponseToJSON)),
        'updatedAt': value.updatedAt,
    };
}

