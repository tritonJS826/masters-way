// @ts-nocheck
/* eslint-disable */
/**
 * Masters way API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchemasUpdateUserPayload
 */
export interface SchemasUpdateUserPayload {
    /**
     * 
     * @type {string}
     * @memberof SchemasUpdateUserPayload
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasUpdateUserPayload
     */
    imageUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SchemasUpdateUserPayload
     */
    isMentor?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SchemasUpdateUserPayload
     */
    name?: string;
}

/**
 * Check if a given object implements the SchemasUpdateUserPayload interface.
 */
export function instanceOfSchemasUpdateUserPayload(
    value: object
): boolean {
    let isInstance = true;

    return isInstance;
}

export function SchemasUpdateUserPayloadFromJSON(json: any): SchemasUpdateUserPayload {
    return SchemasUpdateUserPayloadFromJSONTyped(json, false);
}

export function SchemasUpdateUserPayloadFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): SchemasUpdateUserPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'isMentor': !exists(json, 'isMentor') ? undefined : json['isMentor'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}


export function SchemasUpdateUserPayloadToJSON(value?: SchemasUpdateUserPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'imageUrl': value.imageUrl,
        'isMentor': value.isMentor,
        'name': value.name,
    };
}

