// @ts-nocheck
/* eslint-disable */
/**
 * Masters way general API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SchemasCreateUserMentoringRequestPayload,
} from '../models/index';
import {
    SchemasCreateUserMentoringRequestPayloadFromJSON,
    SchemasCreateUserMentoringRequestPayloadToJSON,
} from '../models/index';

export interface CreateUserMentoringRequestRequest {
    request: SchemasCreateUserMentoringRequestPayload;
}

export interface DeleteToUserMentoringRequestRequest {
    userUuid: string;
    wayUuid: string;
}

/**
 * 
 */
export class ToUserMentoringRequestApi extends runtime.BaseAPI {

    /**
     * Create a new userMentoringRequest
     */
    async createUserMentoringRequestRaw(requestParameters: CreateUserMentoringRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.request === null || requestParameters.request === undefined) {
            throw new runtime.RequiredError('request','Required parameter requestParameters.request was null or undefined when calling createUserMentoringRequest.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/toUserMentoringRequests`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SchemasCreateUserMentoringRequestPayloadToJSON(requestParameters.request),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create a new userMentoringRequest
     */
    async createUserMentoringRequest(requestParameters: CreateUserMentoringRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.createUserMentoringRequestRaw(requestParameters, initOverrides);
    }

    /**
     * Delete toUserMentoringReques by UUID
     */
    async deleteToUserMentoringRequestRaw(requestParameters: DeleteToUserMentoringRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.userUuid === null || requestParameters.userUuid === undefined) {
            throw new runtime.RequiredError('userUuid','Required parameter requestParameters.userUuid was null or undefined when calling deleteToUserMentoringRequest.');
        }

        if (requestParameters.wayUuid === null || requestParameters.wayUuid === undefined) {
            throw new runtime.RequiredError('wayUuid','Required parameter requestParameters.wayUuid was null or undefined when calling deleteToUserMentoringRequest.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/toUserMentoringRequests/{userUuid}/{wayUuid}`.replace(`{${"userUuid"}}`, encodeURIComponent(String(requestParameters.userUuid))).replace(`{${"wayUuid"}}`, encodeURIComponent(String(requestParameters.wayUuid))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete toUserMentoringReques by UUID
     */
    async deleteToUserMentoringRequest(requestParameters: DeleteToUserMentoringRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteToUserMentoringRequestRaw(requestParameters, initOverrides);
    }

}
